crlf db 0Dh, 0Ah, '$' 
用于定义一个换行符（Carriage Return + Line Feed），其作用是让程序在输出时进行换行。
  crlf 是一个标签，用于指向后面定义的字节序列。
  0Dh 是回车符（Carriage Return, CR）。它使光标回到当前行的开头。
  0Ah 是换行符（Line Feed, LF）。它使光标移动到下一行。
  '$' 是DOS中断0x21功能0x09用来输出字符串的终止符号，表示字符串的结束。这样，DOS可以知道何时停止显示字符串。



在程序的输出部分，通常会使用这行代码来在打印信息时换行。例如：
  lea dx, crlf
  mov ah, 09h
  int 21h


LEA (Load Effective Address)
lea（Load Effective Address）是一个指令，用于将操作数的有效地址加载到寄存器中，而不是加载数据的实际值。

mov ah, 0Ah 设置寄存器 AH 为 0x0A，即输入缓冲区模式。
0x0A 功能的特点是：当用户输入一行字符时，输入的字符会被存储在缓冲区中，直到用户按下回车键为止。

lea dx, keyword 指令将变量 keyword 的地址加载到 DX 寄存器中。
int 21h 是调用 DOS 中的服务。根据 AH 中存储的值，它会执行相应的操作。
AH = 0Ah 表示调用功能 0x0A，即输入一行文本。此时，输入的字符会被存储到 DX 寄存器指向的缓冲区（即 keyword）。


    keyword db 20,?, 20 dup('$')
第一个字节是缓冲区的大小（20），表示最多可以输入20个字符。
第二个字节（?）是输入的字符数，会在用户输入后被程序自动填充。
后续的字节存储实际输入的字符，直到用户按下回车键为止。

第一个字节：最大输入长度（例如 20）。
第二个字节：实际输入的字符数（由 DOS 中断自动填充）。
其余字节：存储用户输入的字符。

; 获取关键字长度 (SI指向关键字)
lea si, keyword + 1        ; SI指向关键字的实际字符（跳过第一个字节）
mov al, [si-1]             ; 获取关键字的长度
mov cx, ax                 ; CX存储关键字的长度

jl 是一个条件跳转指令，它表示“如果小于（jump if less）”就跳转
jl 跳转的条件基于 符号标志位（SF） 和 溢出标志位（OF）


cmpsb 是一种字符串比较指令，表示比较两个字符串中的单个字节（b 代表字节）。
  它将 DS:SI 指向的字节（源字符串）与 ES:DI 指向的字节（目标字符串）进行比较。
  如果这两个字节相等，那么它将继续比较接下来的字节。如果不相等，它会停止比较。
repe 是一个前缀，表示重复执行后面的指令，直到某些条件满足为止。repe 具体表示 重复比较，并且只要比较的字节相等且计数器不为零，就继续执行。
  repe 是 rep（重复执行）的扩展，适用于相等条件。
