在代码段中使用数据：
MASM内部以数据位的个数定义了多种数据类型
    BYTE, db , 8位
    WORD, dw , 16
    DWORD,dd , 32
    QWORD,dq , 64

写16进制不能以字母开头，必须写个0，后面写个H

将数据、代码、栈放入不同的段
      assume cs:code,ds:data,ss:stack
      data segment         dw 10 dup(0)         data ends
      stack segment
      code segment
数据段。代码段。栈段存储的空间是连续的，至少占了16个字节（为了分开）
只要代码段前面还存了一些东西，就要用start，让cs:ip正确的指向开始的地方

dup使用：
    db 10 dup(1)
    db 10 dup(1,2,3)
    db 3 dup('abc','def')

    db 'hello world'  存储字符串 在内存中用ASCII码存储

函数：封装死的，只有调用才执行
proc 和 endp 用来定义过程（即子程序）。它们的作用与 C 语言等高级语言中的函数或方法类似。
当你定义一个过程时，代码并不会在程序顺序执行时自动执行该过程。只有在你显式调用这个过程时，程序才会跳转到该过程并执行它。
proc_name proc
    ; 过程中的指令
    ; 这里放置过程的代码
proc_name endp
